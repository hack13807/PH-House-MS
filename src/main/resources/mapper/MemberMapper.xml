<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panghu.housemanage.dao.MemberMapper">
    <resultMap id="memberVoMap" type="com.panghu.housemanage.pojo.vo.MemberVo" >
        <id column="rowId" property="rowId"/>
        <result column="memberStatus" property="memberStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result column="sex" property="sex" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result column="memberName" property="memberName"/>
        <result column="tel" property="tel"/>
        <result column="idcard" property="idCard"/>
        <result column="roomId" property="roomId"/>
        <result column="memberId" property="memberId"/>
        <result column="roomNo" property="roomNo"/>
        <result column="leaseEffective" property="leaseEffective"/>
    </resultMap>


    <select id="pageQueryMember" parameterType="java.util.HashMap" resultMap="memberVoMap">
        Select m.id as rowId,m.name as memberName, m.sex, m.tel,m.idcard,m.status as memberStatus, GROUP_CONCAT(r.number SEPARATOR ',') as roomNo
        from t_member m
        left join t_lease_member_rel rel on rel.member_id = m.id
        left join t_lease l on l.id = rel.lease_id  and l.effective = 1 and l.isdelete = 0
        left join t_room r on l.room_id = r.id
        <where>
            1 = 1
            <if test=" memberVo.memberName != null and memberVo.memberName != '' ">
                and (
                    m.name LIKE CONCAT('%', #{memberVo.memberName}, '%')
                    or m.tel LIKE CONCAT('%', #{memberVo.memberName}, '%')
                    or m.idcard LIKE CONCAT('%', #{memberVo.memberName}, '%')
                    or l.number LIKE CONCAT('%', #{memberVo.memberName}, '%')
                )
            </if>
            <if test=" memberVo.roomNo != null and memberVo.roomNo != '' ">
                and r.number = #{memberVo.roomNo}
            </if>
            <if test=" memberVo.roomNos != null and memberVo.roomNos != '' ">
                and r.number IN
                <foreach item="roomNo" collection="memberVo.roomNos" open="(" separator="," close=")">
                    #{roomNo}
                </foreach>
            </if>
            <if test=" memberVo.voStatus != null and memberVo.voStatus != '' and memberVo.voStatus != '-1' ">
                and m.status = #{memberVo.voStatus}
            </if>
            and m.isdelete = 0
            group by m.id, m.name, m.sex, m.tel,m.idcard,m.status
        </where>
    </select>

    <select id="countMemberByRoomId" resultType="java.util.Map">
        SELECT l.room_id as roomId, COUNT(l.room_id) AS count
        FROM t_member m
        left join t_lease l on l.member_id = m.id
        LEFT JOIN t_room r ON l.room_id = r.id
        WHERE r.id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY l.room_id FOR UPDATE
    </select>

    <select id="getByRoomId" resultMap="memberVoMap">
        SELECT m.id as rowId, m.name as memberName, m.tel, m.sex, m.idcard as idCard, m.status as memberStatus
        FROM t_member m
        left join t_lease_member_rel rel on rel.member_id = m.id
        left join t_lease l on l.id = rel.lease_id and l.effective = 1 and l.isdelete = 0
        LEFT JOIN t_room r ON l.room_id = r.id
        WHERE r.id = #{roomId}
    </select>

    <select id="selectByLeaseId" resultType="com.panghu.housemanage.pojo.po.MemberPo">
        SELECT m.id as id, m.name as name, m.tel, m.sex, m.idcard as idCard, m.status as status
        FROM t_member m
        left join t_lease_member_rel rel on rel.member_id = m.id
        LEFT JOIN t_lease l ON l.id = rel.lease_id and l.isdelete = 0
        WHERE l.id = #{leaseId}
    </select>

    <select id="getRentMemberByLeaseId" resultMap="memberVoMap">
        SELECT m.id as rowId, m.name as memberName, m.tel, m.sex, m.idcard as idCard, m.status as memberStatus, l.effective as leaseEffective
        FROM t_member m
        left join t_lease_member_rel rel on rel.member_id = m.id
        LEFT JOIN t_lease l ON l.id = rel.lease_id
        WHERE
        m.id in (
            select member_id from t_lease_member_rel where lease_id = #{leaseId}
        )
        and l.isdelete = 0
    </select>
</mapper>
