<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panghu.housemanage.dao.LeaseMapper">
    <resultMap id="leaseVoMap" type="com.panghu.housemanage.pojo.vo.LeaseVo" >
        <id column="rowId" property="rowId"/>
        <result column="leaseType" property="leaseType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result column="unit" property="unit"/>
        <result column="rent_amount" property="rentAmount"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="roomNo" property="roomNo"/>
        <result column="memberName" property="memberName"/>
        <result column="number" property="leaseNumber"/>
        <result column="effective" property="effective" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
    </resultMap>


    <select id="queryLeaseByMemberId" parameterType="java.util.Map" resultMap="leaseVoMap">
        Select l.id as rowId,l.lease_type as leaseType,l.unit,l.rent_amount,l.start_date,l.end_date,l.number, l.effective, l.effective
        from t_lease l
        left join t_member m on m.id = l.member_id
        left join t_room r on r.id = l.room_id
        <where>
            m.id = #{memberId}
            and l.isdelete = 0
        </where>
        order by l.effective desc, l.start_date desc
    </select>

    <select id="queryLeaseByRoomId" parameterType="java.util.Map" resultMap="leaseVoMap">
        Select l.id as rowId,l.lease_type as leaseType,l.unit,l.rent_amount,l.start_date,l.end_date,l.number
        from t_lease l
        left join t_member m on m.id = l.member_id
        left join t_room r on r.id = l.room_id
        <where>
            r.id = #{roomId}
            and l.effective = 1
            and l.isdelete = 0
        </where>
    </select>

    <select id="pageQueryLease" parameterType="com.panghu.housemanage.pojo.vo.LeaseVo" resultMap="leaseVoMap">
        Select r.number as roomNo, m.name as memberName, l.id as rowId,l.lease_type as
        leaseType,l.unit,l.rent_amount,l.start_date,l.end_date,l.number,
        r.id as roomId, m.id as memberId, l.effective
        from t_lease l
        left join t_member m on m.id = l.member_id
        left join t_room r on r.id = l.room_id
        <where>
            1 = 1
            <if test=" leaseVo.memberName != null and leaseVo.memberName != '' ">
                and m.name = #{leaseVo.memberName}
            </if>
            <if test=" leaseVo.memberNames != null and leaseVo.memberNames.size > 0 ">
                and m.name IN
                <foreach item="memberName" collection="leaseVo.memberNames" open="(" separator="," close=")">
                    #{memberName}
                </foreach>
            </if>
            <if test=" leaseVo.roomNo != null and leaseVo.roomNo != '' ">
                and r.number = #{leaseVo.roomNo}
            </if>
            <if test=" leaseVo.voLeaseType != null and leaseVo.voLeaseType != '' and leaseVo.voLeaseType != '-1' ">
                and l.lease_type = #{leaseVo.voLeaseType}
            </if>
            <if test=" leaseVo.voEffective != null and leaseVo.voEffective != '' and leaseVo.voEffective != '-1'  ">
                and l.effective = #{leaseVo.voEffective}
            </if>
            and m.isdelete = 0
            and l.isdelete = 0
        </where>
    </select>
</mapper>
